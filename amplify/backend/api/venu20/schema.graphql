type Venue @model  @auth(rules: [
  { allow: public, operations: [read], provider: iam },
  { allow: owner }]) {
  id: ID
  name: String!
  location: String
  capacity: String
  image: String
  concerts: [Concert] @hasMany

}

type Concert @model  @auth(rules: [
  { allow: public, operations: [read], provider: iam },
  { allow: owner }]) {
  id: ID
  artistName: String!
  openers: String!
  date: String!
  startTime: String
  image: String!
  youtube: String
  interactions: [UserShowInteraction] @hasMany
}

type Post @model @auth(rules: [
  { allow: public, operations: [read], provider: iam },
  { allow: owner }]) {
  id: ID!
  userName: String!
  profilePicture: String!
  datePosted: AWSDateTime!
  eventDate: AWSDateTime!
  text: String!
  photoUrl: String
  videoUrl: String
  ticketUrl: String
  likes: Int!
  likedBy: [String]
  comments: [Comment] @hasMany
}

type Comment @model @auth(rules: [
  { allow: public, operations: [read], provider: iam },
  { allow: owner }]) {
  id: ID!
  text: String!
  userId: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  userName: String!
  profilePicture: String!
  likes: Int!
   likedBy: [String]
  replies: [Comment] @hasMany parentId: ID
}



type UserShowInteraction @model @auth(rules: [
  { allow: public, operations: [read], provider: iam },
  { allow: owner }]) {
  id: ID
  userId: ID!
  concertId: ID!
  status: ShowStatus!
}

enum ShowStatus {
  GOING
  INTERESTED
  UNDERGROUND
}

#type S3Object @aws_iam  {
#  region: String!
#  bucket: String!
#  key: String!
#}




